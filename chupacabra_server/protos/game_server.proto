syntax = "proto3";
package game_server;

import "google/protobuf/empty.proto";

import "../chupacabra_client/protos/game_structs.proto";

// Internal info needed about a player
message InternalPlayerInfo {
    string player_id = 1; // The internal player id
    game_structs.PlayerInfo player_info = 2;
}

// If a user is joining a game, the response
message GameResponse {
    bool success = 1;
    string message = 2;
    game_structs.GameStatusInfo game_status = 3;
}

// A request for a new game
message GameRequest {
    string player_id = 1;
    game_structs.PlayerInfo player_info = 2;
    string game_id = 3;
}

// Will uniquely identify a player in a game
message UserGameInfo {
    string player_id = 1;
    string game_id = 2;
}

// Request a move
message MoveRequest {
    UserGameInfo game_info = 1;
    game_structs.Move move = 2;
}

// A fairly generic game server
service GameServer {
    // Request a new game
    rpc RequestGame(GameRequest) returns (GameResponse) {}
    // Describe the game contained in this server
    rpc DescribeGame(google.protobuf.Empty) returns (game_structs.GameDescription) {}
    // Describe the moves available in this game
    rpc DescribeMoves(google.protobuf.Empty) returns (game_structs.GameMoves) {}
    // Make a move
    rpc MakeMove(MoveRequest) returns (game_structs.GameActionResponse) {}
    // Get the game status
    rpc GetGameStatus(UserGameInfo) returns (game_structs.GameStatusInfo) {}
    // Get the moves available to the user at this point in the game
    rpc GetLegalMoves(UserGameInfo) returns (game_structs.GameMoves) {}
    // Forfeit the game
    rpc ForfeitGame(UserGameInfo) returns (game_structs.GameActionResponse) {}
}
